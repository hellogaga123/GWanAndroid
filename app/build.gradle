apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    signingConfigs {
        appMain {
            storeFile file('../GWanAndroid.keystore')
            storePassword 'zcsy123456'
            keyPassword 'zcsy123456'
            keyAlias = 'key0'
        }
        app1 {
            storeFile file('GWanAndroid.keystore')
            storePassword 'zcsy123456'
            keyPassword 'zcsy123456'
            keyAlias = 'key0'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

    }

    buildTypes {
        release {
            // 开启混淆
            minifyEnabled true
            // Zipalign压缩优化
            zipAlignEnabled true
            // 移除无用的资源文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // 指定 debug 使用release的签名
//            signingConfig release.signingConfig
        }
    }
    flavorDimensions "app"
    productFlavors {
        appMain {
            dimension "app"
            applicationId "com.gaga.gwanandroid"
            // 自动生成@string/app_name为应用名称
            resValue "string", "appName", "appMain"
            manifestPlaceholders = [
                    app_icon: "@mipmap/ic_launcher",
                    amap_key: "d947c72d035f6aa6b9c7c80d28ff1238",
//                    package_name : applicationId,
//                    WEIBO_APPKEY : "微博APPKEY",
//                    JPUSH_PKGNAME: "接受推送的包名",
//                    JPUSH_APPKEY : "极光推送的APPKEY", //JPush上注册的包名对应的appkey.
//                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]
            buildConfigField("String", "REFER_URL", '"http://xaappapiv2.evxian.com"')
            signingConfig signingConfigs.appMain
        }
        app1 {
            dimension "app"
            applicationId "com.zcsy.gbcombination"
            // 自动生成@string/app_name为应用名称
            resValue "string", "appName", "app1"
            manifestPlaceholders = [
                    app_icon: "@mipmap/ic_launcher",
                    amap_key: "d947c72d035f6aa6b9c7c80d28ff1238",
//                    package_name : applicationId,
//                    WEIBO_APPKEY : "微博APPKEY",
//                    JPUSH_PKGNAME: "接受推送的包名",
//                    JPUSH_APPKEY : "极光推送的APPKEY", //JPush上注册的包名对应的appkey.
//                    JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
            ]
            buildConfigField("String", "REFER_URL", '"http://xaappapiv2.evxian.com"')
            signingConfig signingConfigs.app1
        }
    }

    sourceSets {
        appMain {
            jniLibs.srcDirs = ['libs']
            java.srcDirs = ['src/main/java']
        }
        app1 {
//            java.srcDirs = ['src/app1/java']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    android.applicationVariants.all {
        variant ->
            if (variant.name == 'appMainDebug') {
//                buildConfigField("String", "BASE_URL", '"https://corpapi.zc3u.com/enterprise-service-app/"')
                buildConfigField("String", "BASE_URL", '"https://saas.mintoucharge.com/capi/"')
            }
            if (variant.name == 'appMainRelease') {
                buildConfigField("String", "BASE_URL", '"https://saas.mintoucharge.com/capi/"')
            }
            if (variant.name == 'app1Debug') {
                buildConfigField("String", "BASE_URL", '"app1UrlDebug"')
            }
            if (variant.name == 'app1Release') {
                buildConfigField("String", "BASE_URL", '"app1UrlRelease"')
            }
            variant.outputs.all {
                // 此处指定生成的apk文件名
                outputFileName = "gb_combination" + "-" + variant.name + "-v" +
                        defaultConfig.versionName + ".apk"
            }
    }
    buildFeatures {
        dataBinding = true
    }
    //配置dokka参数
//    dokka {
//        outputFormat = 'javadoc'
//        outputDirectory = "$buildDir/dokka"
//
//        configuration {
//            // Do not output deprecated members
//            skipDeprecated = true
//            // Emit warnings about not documented members.
//            reportUndocumented = true
//            // Do not create index pages for empty packages
//            skipEmptyPackages = true
//
//            noJdkLink = true
//            noStdlibLink = true
//            noAndroidSdkLink = true
//        }
//    }
}

dependencies {
    api project(path: ':lib_core')
    api project(path: ':module_seekpile')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


//    api project(path: ':module_seekpile')

    //aRouter 路由
    kapt rootProject.ext.dependencies["arouter"]
}